// Import necessary variables if not globally available (though they should be)
// :root {
//   --gray-200: #e9ecef;
//   --gray-400: #ced4da;
//   --gray-600: #6c757d;
//   --primary-color: #2a9d8f;
//   --bs-border-radius: 0.375rem; // Default Bootstrap radius
//   --bs-border-radius-sm: 0.25rem; // Default Bootstrap small radius
// }

.pagination-container {
  display: flex;
  flex-wrap: wrap; // Allow wrapping on medium screens before stacking
  justify-content: space-between; // Push info left, controls right
  align-items: center;
  gap: 1rem 1.5rem; // Row gap, Column gap
  margin-top: 2rem; // Slightly reduced margin-top
  padding: 1rem 1.5rem; // Adjusted padding
  background-color: white;
  border-radius: 0.5rem; // Slightly smaller radius to match buttons/inputs
  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.04); // Softer shadow

  // Medium screens: Allow controls to wrap below results info if needed
  @media (max-width: 991.98px) {
    justify-content: center; // Center items when they might wrap
    text-align: center;
  }

  // Small screens: Stack elements vertically
  @media (max-width: 767.98px) {
    flex-direction: column;
    align-items: center; // Center items vertically
    gap: 1.25rem; // Consistent vertical gap
    padding: 1.25rem 1rem; // Adjust padding for smaller screens

    .results-info {
      order: 3; // Show results count last
      margin-top: 0.5rem; // Add space above when stacked
    }

    .controls-container {
      order: 1; // Show controls first
      flex-direction: column; // Stack controls vertically
      width: 100%;
      align-items: center; // Center controls
      gap: 1.25rem; // Consistent gap between selector and pagination nav
    }

    // No need to re-order page-size-selector and nav within controls-container
    // as flex-direction: column already stacks them.
  }
}

.results-info {
  color: var(--gray-600);
  font-size: 0.875rem; // Slightly smaller font
  font-weight: 500;
  white-space: nowrap; // Prevent wrapping

  p {
    margin-bottom: 0;
  }
}

.controls-container {
  display: flex;
  flex-wrap: wrap; // Allow wrapping within controls if space is tight
  justify-content: flex-end; // Align controls to the right by default
  align-items: center;
  // Adjust gap as needed, might need less horizontal gap now
  gap: 1rem 1.25rem; // Slightly reduced horizontal gap maybe? Test visually.

  @media (max-width: 991.98px) {
    justify-content: center; // Center controls on medium screens
  }

  // Small screens handled by pagination-container media query
}

.page-size-selector {
  display: flex;
  align-items: center;
  gap: 0.5rem;

  .form-label {
    margin-bottom: 0;
    font-size: 0.875rem; // Match results-info font size
    color: var(--gray-600);
    white-space: nowrap; // Prevent label wrapping
  }

  .form-select {
    // Using form-select-sm class in HTML, so we adjust based on that
    // If not using -sm class, adjust padding/font-size here
    width: auto; // Allow select to size based on content
    min-width: 70px; // Ensure minimum width for "100" and dropdown indicator
    height: 34px; // Match the height of pagination buttons
    padding: 0.4rem 0.8rem; // Match padding of pagination buttons
    line-height: 1.4; // Match line-height of pagination buttons
    display: flex; // Use flexbox for vertical centering
    align-items: center; // Vertically center content
    // Bootstrap's form-select-sm handles padding and font-size
  }
}

.pagination {
  // display: flex; // Already handled by Bootstrap class
  // flex-wrap: nowrap; // Already handled by Bootstrap class
  margin-bottom: 0 !important; // Ensure no bottom margin from Bootstrap

  .page-item {
    margin: 0 2px; // Slightly reduce horizontal margin

    &:first-child .page-link {
      // Use Bootstrap's variable if available, otherwise fallback
      border-top-left-radius: var(--bs-border-radius-sm, 0.25rem);
      border-bottom-left-radius: var(--bs-border-radius-sm, 0.25rem);
    }

    &:last-child .page-link {
      // Use Bootstrap's variable if available, otherwise fallback
      border-top-right-radius: var(--bs-border-radius-sm, 0.25rem);
      border-bottom-right-radius: var(--bs-border-radius-sm, 0.25rem);
    }
  }

  .page-link {
    cursor: pointer;
    color: var(--primary-color);
    border-color: var(--gray-200);
    transition: all 0.2s ease;
    padding: 0.4rem 0.8rem; // Slightly reduced padding for a tighter look
    font-size: 0.9rem; // Slightly smaller font
    line-height: 1.4; // Adjust line-height for vertical alignment
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 34px; // Ensure consistent height (adjust as needed)
    min-width: 34px; // Ensure consistent width for icon buttons
    white-space: nowrap; // Prevent text wrapping inside buttons
    border-radius: var(--bs-border-radius-sm, 0.25rem); // Consistent small radius

    &:hover {
      background-color: rgba(42, 157, 143, 0.08); // Softer hover
      color: var(--primary-color);
      border-color: var(--primary-color);
      z-index: 2;
    }

    &:focus {
      box-shadow: 0 0 0 0.2rem rgba(42, 157, 143, 0.25); // Use Bootstrap's focus shadow pattern
      z-index: 3; // Ensure focus outline is visible
      border-color: var(--primary-color); // Ensure border color changes on focus
    }

    i {
      // Style icons within buttons
      font-size: 1rem; // Slightly smaller icon size
      line-height: 1; // Ensure icon is centered vertically
    }
  }

  // Specific styles for the "Page X of Y" button
  li.active[aria-current='page'] .page-link {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: white;
    font-weight: 600; // Slightly bolder for active state
    z-index: 2; // Ensure active page is visually on top
    min-width: unset; // Allow this button to size naturally based on content
    padding: 0.4rem 1rem; // Give text a bit more horizontal padding
  }

  li.disabled .page-link {
    color: var(--gray-400);
    cursor: not-allowed;
    background-color: white; // Ensure disabled has default bg
    border-color: var(--gray-200); // Ensure disabled has default border
    opacity: 0.7; // Slightly fade disabled items
  }
}

// Remove redundant :root definition if these vars are properly defined in styles.scss
// :root {
//   --gray-200: #e9ecef;
//   --gray-400: #ced4da;
//   --gray-600: #6c757d;
//   --primary-color: #2a9d8f;
// }
